{"version":3,"sources":["components/common/listGroup.jsx","components/navBar.jsx","components/bannerContent.jsx","components/contactUs.jsx","components/aboutUs.jsx","services/fakeCategoryService.js","services/fakePlantService.js","components/common/pagination.jsx","components/common/like.jsx","components/plantsTable.jsx","components/plants.jsx","utils/paginate.js","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["ListGroup","props","items","textProperty","valueProperty","selectedItem","onItemSelect","className","map","item","key","onClick","cursor","defaultProps","NavBar","Link","to","title","placeholder","type","Banner","Component","ContactUs","AboutUs","categories","_id","name","plants","category","numberInStock","dailyRentalRate","liked","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","console","log","page","Like","state","classes","this","onLikeToggle","style","arian-hidden","PlantsTable","onLike","movie","Plants","handleDelete","singlePlant","filter","m","setState","handleLikeToggle","plant","index","indexOf","handlePageChange","handleCategorySelect","selectedCategory","g","length","allPlants","filtered","pageNumber","startIndex","slice","take","value","paginate","onDelete","Footer","App","BrowserRouter","Switch","Route","path","exact","component","ListCategory","Redirect","from","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa14a5e0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem,\r\n    onItemSelect,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"list-group item-category\">\r\n      {items.map((item) => (\r\n        <div className=\"bucket category-img\"\r\n          key={item[valueProperty]}\r\n          onClick={() => onItemSelect(item)}\r\n          className={\r\n            item === selectedItem ? \"bucket active\" : \"bucket\"\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          {item[textProperty]}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: \"_id\",\r\n  textProperty: \"name\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"top-header\">\r\n      <div className=\"wrap-container clearfix\">\r\n        <Link to=\"/\" title=\"Plant-World\" className=\"header-logo left\">\r\n          Plant World\r\n        </Link>\r\n        <div className=\"right-header right\">\r\n          <button className=\"menu-btn\"></button>\r\n          <nav className=\"nav clearfix\">\r\n            <ul className=\"nav-menus clearfix\">\r\n              <li>\r\n                <Link to=\"/\" title=\"Store\">\r\n                  <span>Store</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/category\" title=\"Category\">\r\n                  <span>Category</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/aboutus\" title=\"About us\">\r\n                  <span>About us</span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/contact\" title=\"Contact\">\r\n                  <span>Contact</span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <form>\r\n              <input className=\"search\" placeholder=\"search\" type=\"search\" />\r\n              <button className=\"search-btn\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n  \r\n","import React, { Component } from 'react';\r\nimport NavBar from './navBar';\r\n\r\nclass Banner extends Component {\r\n  render() { \r\n    return ( \r\n      <div className=\"bg-banner\">\r\n        <NavBar />\r\n        <div>\r\n          <div className=\"wrap-container text-position\">\r\n            <h4 className=\"title-first\">Bring Freshness to your home</h4>\r\n            <h1 className=\"title-second\">PLANTS FOR YOUR INTERIOR</h1>\r\n            <button className=\"shop-btn\">Shop Now</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default Banner;","import React from \"react\";\r\n\r\nconst ContactUs = () => {\r\n  return <h1>Contact Us</h1>;\r\n};\r\n\r\nexport default ContactUs;\r\n","import React from 'react';\r\n\r\nconst AboutUs = () => {\r\n  return ( <h1>About us</h1> );\r\n}\r\n \r\nexport default AboutUs;","export const categories = [\r\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Hanging Plants\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Garden Plants\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Indoor Plants\" },\r\n];\r\n\r\nexport function getCategories() {\r\n  return categories.filter((g) => g);\r\n}\r\n","import * as categoriesAPI from \"./fakeCategoryService\";\r\n\r\nconst plants = [\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471815\",\r\n    title: \"Jade Plant\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Indoor Plants\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471816\",\r\n    title: \"Peace Lily\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Hanging Plants\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471817\",\r\n    title: \"Shutter Island\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Garden Plants\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n    liked: true,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n    title: \"Hibiscus Plant\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Garden Plants\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: true,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n    title: \"Snake Plant\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Indoor Plants\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n    title: \"Tulip\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Garden Plants\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n    title: \"Succelent\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Garden Plants\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47182g\",\r\n    title: \"Succelent\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471821\", name: \"Garden Plants\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471821\",\r\n    title: \"Aloe vera\",\r\n    category: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Indoor Plants\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n  }\r\n  \r\n];\r\n\r\nexport function getPlants() {\r\n  return plants;\r\n}\r\n\r\nexport function getPlant(id) {\r\n  return plants.find((m) => m._id === id);\r\n}\r\n\r\nexport function savePlant(plant) {\r\n  let plantInDb = plants.find((m) => m._id === plant._id) || {};\r\n  plantInDb.title = plant.title;\r\n  plantInDb.category = categoriesAPI.categories.find((g) => g._id === plant.categoryId);\r\n  plantInDb.numberInStock = plant.numberInStock;\r\n  plantInDb.dailyRentalRate = plant.dailyRentalRate;\r\n\r\n  if (!plantInDb._id) {\r\n    plantInDb._id = Date.now().toString();\r\n    plants.push(plantInDb);\r\n  }\r\n\r\n  return plantInDb;\r\n}\r\n\r\n// export function deleteplant(id) {\r\n//   let plantInDb = plants.find((m) => m._id === id);\r\n//   plants.splice(plants.indexOf(plantInDb), 1);\r\n//   return plantInDb;\r\n// }\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if(pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  console.log(pagesCount, itemsCount, pages, currentPage );\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li key={page} className={page === currentPage? \"page-item active\" : \"page-item\" }>\r\n            <a\r\n              onClick={() => onPageChange(page)}\r\n              className=\"page-link\"\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// Pagination.propTypes = {\r\n//   itemsCount: PropTypes.number.isrequired,\r\n//   pageSize: PropTypes.number.isrequired,\r\n//   currentPage: PropTypes.number.isrequired,\r\n//   onPageChange: PropTypes.func.isrequired\r\n// }\r\n\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Like extends Component {\r\n  state = {};\r\n  render() {\r\n    let classes = \"fa fa-heart\";\r\n    if (!this.props.liked) classes += \"-o\";\r\n    return (\r\n      <i\r\n        className={classes}\r\n        onClick={this.props.onLikeToggle}\r\n        style={{ cursor: \"pointer\" }}\r\n        arian-hidden=\"true\"\r\n      ></i>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from 'react';\r\nimport Like from \"./common/like\";\r\nimport { categories } from '../services/fakeCategoryService';\r\n\r\n\r\nconst PlantsTable = (props) => {\r\n  const {plants, onLike}  = props\r\n  return (\r\n    <div className=\"\">\r\n      {/* <thead>\r\n        <tr>\r\n          <th>Patient name</th>\r\n          <th>Type</th>\r\n          <th>Stock</th>\r\n          <th>Rate</th>\r\n          <th>Favourite</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead> */}\r\n      <div className=\"item-category\">\r\n        {plants.map((movie) => (\r\n          <div className=\"bucket\" key={movie._id}>\r\n            <h4>{movie.title}</h4>\r\n            <h5>{movie.category.name}</h5>\r\n            {/* <td>{movie.numberInStock}</td>\r\n            <td>{movie.dailyRentalRate}</td> */}\r\n            <div>\r\n              <Like\r\n                liked={movie.liked}\r\n                onLikeToggle={() => onLike(movie)}\r\n              />\r\n            </div>\r\n            {/* <td>\r\n              <button\r\n                onClick={() => onDelete(movie)}\r\n                className=\"btn btn-warning btn-sm\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </td> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default PlantsTable;","import React, { Component } from \"react\";\r\n\r\nimport { getPlants } from \"../services/fakePlantService\";\r\nimport { getCategories } from \"../services/fakeCategoryService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport PlantsTable from \"./plantsTable\";\r\n\r\nclass Plants extends Component {\r\n  state = {\r\n    plants: [],\r\n    categories: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const categories = [{name: \"All Categories\"}, ...getCategories()]\r\n    this.setState({ plants: getPlants(), categories: categories });\r\n  }\r\n\r\n  handleDelete = (singlePlant) => {\r\n    console.log(singlePlant);\r\n    const plants = this.state.plants.filter((m) => m._id !== singlePlant._id);\r\n    this.setState({ plants: plants });\r\n  };\r\n\r\n  handleLikeToggle = (plant) => {\r\n    console.log(\"Like\", plant.title);\r\n    const plants = [...this.state.plants];\r\n    const index = plants.indexOf(plant);\r\n    plants[index] = { ...plants[index] };\r\n    plants[index].liked = !plants[index].liked;\r\n\r\n    this.setState({ plants: plants });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    console.log(page);\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCategorySelect = (category) => {\r\n    console.log(category);\r\n    this.setState({ selectedCategory: category, currentPage: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.plants;\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedCategory,\r\n      plants: allPlants,\r\n    } = this.state;\r\n\r\n    // if (count === 0) return <p>There is no details in the database</p>;\r\n\r\n    //for select item according to category\r\n    const filtered = selectedCategory && selectedCategory._id\r\n      ? allPlants.filter((m) => m.category._id === selectedCategory._id)\r\n      : allPlants;\r\n\r\n    //for pagination\r\n    const plants = paginate(filtered, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"items-container wrap-container\">\r\n        <div>\r\n          <ListGroup\r\n            items={this.state.categories}\r\n            selectedItem={this.state.selectedCategory}\r\n            onItemSelect={this.handleCategorySelect}\r\n        />  \r\n        </div>\r\n        <div className=\"each-item-container\">\r\n          <h1 className=\"title-second title-product\">Our Products</h1>\r\n          {/* <p>There are {filtered .length} plants</p> */}\r\n          <PlantsTable plants={plants} onLike={this.handleLikeToggle} onDelete={this.handleDelete}/>\r\n          <Pagination\r\n            itemsCount={filtered.length}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Plants;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <footer>\r\n      &#169;2020\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport ListCategory from './components/common/listGroup'\nimport Banner from './components/bannerContent';\nimport ContactUs from \"./components/contactUs\";\nimport AboutUs from \"./components/aboutUs\";\nimport Plants from './components/plants';\nimport Footer from './components/footer';\nimport NavBar from './components/navBar';\nimport './assests/css/style.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Banner/>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/store\" exact component={Plants}></Route>\n            <Route path=\"/category\" exact  component={ListCategory}></Route>\n            <Route path=\"/aboutus\" exact  component={AboutUs}></Route>\n            <Route path=\"/contactus\"  exact component={ContactUs}></Route>\n            <Redirect from=\"/\" exact to=\"/store\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </BrowserRouter>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}